@model CreditManageSystemPro.Admin.Models.AddCustomerModel
@{
    ViewBag.Title = "AddCustomer";
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="@Url.Content("~/Content/bootstrap.min.css?v=3.3.5")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/font-awesome.min.css?v=4.4.0")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/animate.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/style.min.css?v=4.0.0")" rel="stylesheet" type="text/css"/>
    <link href="@Url.Content("~/Content/plugins/datapicker/datepicker3.css")" rel="stylesheet" type="text/css"/>
    <link href="@Url.Content("~/Content/plugins/webuploader/webuploader.css")" rel="stylesheet" type="text/css"/>
    <link href="@Url.Content("~/Scripts/plugins/layer/skin/layer.css")" rel="stylesheet"/>
    <link href="@Url.Content("~/Scripts/plugins/layer/skin/layer.css")" rel="stylesheet" type="text/css">
    <script src="@Url.Content("~/Scripts/jquery.min.js?v=2.1.4")" type="text/javascript"></script>
    <script type="text/javascript">
        //将form转为AJAX提交
        function ajaxSubmit(frm, fn) {
            var dataPara = getFormJson(frm);
            $.ajax({
                url: "/Admin/Customer/AddCustomer",
                type: frm.method,
                data: dataPara,
                success: fn,
                error: function (data) { alert('错误'); }
            });
        }

        //将form中的值转换为键值对。
        function getFormJson(frm) {
            var o = {};
            var a = $(frm).serializeArray();
            $.each(a, function () {
                if (o[this.name] !== undefined) {
                    if (!o[this.name].push) {
                        o[this.name] = [o[this.name]];
                    }
                    o[this.name].push(this.value || '');
                } else {
                    o[this.name] = this.value || '';
                }
            });
            return o;
        }
    </script>
    <title>新增客户</title>
</head>
<body class="gray-bg">
    <div class="">
        <div class="row">
            <div class="col-sm-12">
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <h5>
                            客户信息</h5>
                    </div>
                    <div class="ibox-content">
                        <form class="form-horizontal m-t" id="commentForm" method="post">
                            <div class="form-group">
                                <span class="form-groups">
                                <label class="col-sm-1 control-label" style="color: red">
                                    客户姓名</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(model => model.customerName, new {@class = "form-control", name = "customerName", @required = "required", id = "customerName"})
                                </div>
                                </span>
                                <span class="form-groups">
                                <label class="col-sm-1 control-label" style="color: red">
                                    身份证号码</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(model => model.IdCard, new {@class = "form-control", name = "IdCard", @required = "required", id = "IdCard"})
                                </div>
                                </span>
                            </div>
                            <div class="form-group">
                                <span class="form-groups">
                                <label class="col-sm-1 control-label">
                                    户籍所在地</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(model => model.domicilePlace, new {@class = "form-control", name = "domicilePlace", id = "domicilePlace"})
                                </div>
                                </span>
                                <span class="form-groups">
                                <label class="col-sm-1 control-label">
                                    性别</label>
                                <div class="col-sm-2">
                                    @Html.DropDownListFor(model => model.sex, (IEnumerable<SelectListItem>)@ViewData["sex"], new { @class = "form-control m-b", name = "sex", id = "sex" ,style="margin:0"})
                                </div>
                                </span>
                            </div>
                            <div class="form-group">
                                <span class="form-groups">
                                <label class="col-sm-1 control-label">
                                    出生年月</label>
                                <div class="col-sm-2">
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                        @Html.TextBoxFor(model => model.birthday, new { @class = "form-control", name = "birthday", id = "birthday" })
                                    </div>
                                </div>
                                </span>
                                <span class="form-groups">
                                <label class="col-sm-1 control-label">
                                    身份证有效期</label>
                                <div class="col-sm-2">
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                        @Html.TextBoxFor(model => model.expireOfId, new {@class = "form-control", name = "expireOfId", id = "expireOfId"})
                                    </div>
                                </div>
                                </span>
                            </div>
                            <div class="form-group">
                                <span class="form-groups">
                                <label class="col-sm-1 control-label" style="color: red">
                                    移动电话</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(model => model.mobile, new {@class = "form-control", @required = "required", name = "mobile", id = "mobile"})
                                </div>
                                </span>
                                <span class="form-groups">
                                <label class="col-sm-1 control-label" style="color: red">
                                    座机电话</label>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(model => model.telphone, new {@class = "form-control", @required = "required", name = "telphone", id = "telphone"})
                                </div>
                                </span>
                            </div>
                            <div class="form-group">
                                <span class="form-groups">
                            <label class="col-sm-1 control-label">
                                受教育程度</label>
                            <div class="col-sm-2">
                                @Html.DropDownListFor(model => model.educationLevel, (IEnumerable<SelectListItem>)@ViewData["educationLevel"], new { @class = "form-control m-b", name = "educationLevel", id = "educationLevel" })
                            </div>
                            </span>
                            <span class="form-groups">
                            <label class="col-sm-1 control-label">
                                职业</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.occupation, new {@class = "form-control", name = "occupation", id = "occupation"})
                            </div>
                            </span>
                        </div>
                        <div class="form-group">
                            <span class="form-groups">
                            <label class="col-sm-1 control-label">
                                工作单位</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.workUnit, new {@class = "form-control", name = "workUnit", id = "workUnit"})
                            </div>
                            </span>
                            <span class="form-groups">
                            <label class="col-sm-1 control-label">
                                年收入(元)</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.incomeOfYear, new {@class = "form-control", name = "incomeOfYear", id = "incomeOfYear"})
                            </div>
                            </span>
                        </div>
                        <div class="form-group">
                            <span class="form-groups">
                            <label class="col-sm-1 control-label">
                                健康状况</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.healthStatus, new {@class = "form-control", name = "healthStatus", id = "healthStatus"})
                            </div>
                            </span>
                            <span class="form-groups">
                            <label class="col-sm-1 control-label">
                                开户银行</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.bankAccount, new {@class = "form-control", name = "bankAccount", id = "bankAccount"})
                            </div>
                            </span>
                        </div>
                        <div class="form-group">
                            <span class="form-groups">
                            <label class="col-sm-1 control-label">
                                开户名</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.accountName, new {@class = "form-control", name = "accountName", id = "accountName"})
                            </div>
                            </span>
                            <span class="form-groups">
                            <label class="col-sm-1 control-label">
                                不良贷款记录</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.badRecord, new {@class = "form-control", name = "badRecord", id = "badRecord"})
                            </div>
                            </span>
                        </div>
                        <div class="form-group">
                            <span class="form-groups">
                            <label class="col-sm-1 control-label">
                                负债余额</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.debtValue, new {@class = "form-control", name = "debtValue", id = "debtValue"})
                            </div>
                            </span>
                            <span class="form-groups">
                            <label class="col-sm-1 control-label">
                                现住房产权</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.houseRight, new {@class = "form-control", name = "houseRight", id = "houseRight"})
                            </div>
                            </span>
                        </div>
                        <div class="form-group">
                            <span class="form-groups">
                            <label class="col-sm-1 control-label">
                                自有房产估价</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.houseEvaluation, new {@class = "form-control", name = "houseEvaluation", id = "houseEvaluation"})
                            </div>
                            </span>
                            <span class="form-groups">
                            <label class="col-sm-1 control-label">
                                配偶姓名</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.spouseName, new {@class = "form-control", id = "spouseName"})
                            </div>
                            </span>
                        </div>
                        <div class="form-group">
                            <span class="form-groups">
                            <label class="col-sm-1 control-label">
                                配偶身份证</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.spouseIdCard, new {@class = "form-control", id = "spouseIdCard"})
                            </div>
                            </span>
                        </div>
                        <div class="form-group">
                            <span class="form-groups">
                            <label class="col-sm-1 control-label">
                                客户近期照片</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.recentPhoto, new {@class = "form-control", id = "recentPhoto"})
                            </div>
                            </span>
                            <div class="btns">
                                <div id="filePicker" style="float: left">
                                    选择图片</div>
                                <div id="ctlBtn" class="btn btn-default" style="float: left; margin-left: 30px">
                                    开始上传</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-3">
                                <div id="fileList" class="col-lg-offset-4">
                                </div>
                            </div>
                        </div>
                        @*<div class="form-group">
                            <label class="col-sm-2 control-label">
                                图片附件</label>
                            <div class="col-sm-8">
                                @Html.TextBoxFor(model => model.picAttachment, new { @class = "form-control", name = "picAttachment", id = "picAttachment" })
                            </div>
                        </div>
                        <div class="hr-line-dashed">
                        </div>*@
                        <div class="form-group">
                            <span class="form-groups">
                            <label class="col-sm-1 control-label">
                                备注</label>
                            <div class="col-sm-2">
                                @Html.TextAreaFor(model => model.remarks, new {@class = "form-control", name = "remarks", id = "remarks"})
                            </div>
                            </span>
                        </div>
                        <div class="form-group">
                            <div id="thelist" class="uploader-list">
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-4 col-sm-offset-2">
                                <button class="btn btn-primary required" type="submit">
                                    保存内容</button>
                                <button class="btn btn-white" type="button">
                                    取消</button>
                            </div>
                        </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="@Url.Content("~/Scripts/bootstrap.min.js?v=3.3.5")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/content.min.js?v=1.0.0")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/plugins/validate/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/plugins/validate/messages_zh.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/plugins/datapicker/bootstrap-datepicker.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/plugins/layer/layer.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/demo/form-validate-demo.js")" type="text/javascript"></script>
    <script type="text/javascript">
        var BASE_URL = 'Scripts/plugins/webuploader';
        // 图片上传demo
        jQuery(function () {
            var $ = jQuery,
        $list = $('#fileList'),
            // 优化retina, 在retina下这个值是2
        ratio = window.devicePixelRatio || 1,

            // 缩略图大小
        thumbnailWidth = 500 * ratio,
        thumbnailHeight = 300 * ratio,

            // Web Uploader实例
        uploader;

            // 初始化Web Uploader
            uploader = WebUploader.create({

                // 自动上传。
                auto: false,

                // swf文件路径
                //swf: BASE_URL + '/js/Uploader.swf',

                // 文件接收服务端。
                server: '/Admin/Customer/Upload',

                // 选择文件的按钮。可选。
                // 内部根据当前运行是创建，可能是input元素，也可能是flash.
                pick: '#filePicker',

                // 只允许选择文件，可选。
                accept: {
                    title: 'Images',
                    extensions: 'gif,jpg,jpeg,bmp,png',
                    mimeTypes: 'image/*'
                }
            });

            // 当有文件添加进来的时候
            var tempid;
            uploader.on('fileQueued', function (file) {
                var fileid = tempid;
                tempid = file.id;
                if (fileid) {
                    uploader.removeFile(uploader.getFile(fileid, true));
                }
                var $li = $(
                '<div id="' + file.id + '" class="file-item thumbnail">' +
                    '<img>' +
                '</div>'
                ),
            $img = $li.find('img');
                $("#recentPhoto").val(file.name);
                $list.empty();
                $list.append($li);

                // 创建缩略图
                uploader.makeThumb(file, function (error, src) {
                    if (error) {
                        $img.replaceWith('<span>不能预览</span>');
                        return;
                    }

                    $img.attr('src', src);
                }, thumbnailWidth, thumbnailHeight);
            });
            // 文件上传过程中创建进度条实时显示。
            uploader.on('uploadProgress', function (file, percentage) {
                var $li = $('#' + file.id),
                    $percent = $li.find('.progress span');

                // 避免重复创建
                if (!$percent.length) {
                    $percent = $('<p class="progress"><span></span></p>')
                .appendTo($li)
                .find('span');
                }

                $percent.css('width', percentage * 100 + '%');
            });

            // 文件上传成功，给item添加成功class, 用样式标记上传成功。
            uploader.on('uploadSuccess', function (file) {
                $('#' + file.id).addClass('upload-state-done');
                layer.alert("上传成功");
            });

            // 文件上传失败，显示上传出错。
            uploader.on('uploadError', function (file) {
                var $li = $('#' + file.id),
                    $error = $li.find('div.error');

                // 避免重复创建
                if (!$error.length) {
                    $error = $('<div class="error"></div>').appendTo($li);
                }
                $error.text('上传失败');
                layer.alert("上传失败");
            });

            // 完成上传完了，成功或者失败，先删除进度条。
            uploader.on('uploadComplete', function (file) {
                $('#' + file.id).find('.progress').remove();
            });
            //开始上传
            $("#ctlBtn").click(function () {
                uploader.upload();

            });
        });
    </script>
    <script src="@Url.Content("~/Scripts/plugins/webuploader/webuploader.min.js")" type="text/javascript"></script>
</body>
</html>
