@model CreditManageSystemPro.Admin.Models.AddLoanInfoModel
@{
    Layout = null;
    ViewBag.Title = "LoanApply";
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="@Url.Content("~/Content/bootstrap.min.css?v=3.3.5")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/font-awesome.min.css?v=4.4.0")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/animate.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/style.min.css?v=4.0.0")" rel="stylesheet" type="text/css"/>
    <link href="@Url.Content("~/Content/plugins/datapicker/datepicker3.css")" rel="stylesheet" type="text/css"/>
    <link href="@Url.Content("~/Content/plugins/webuploader/webuploader.css")" rel="stylesheet" type="text/css"/>
    <link href="@Url.Content("~/Scripts/plugins/layer/skin/layer.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Scripts/jquery.min.js?v=2.1.4")" type="text/javascript"></script>
    @*<script src="@Url.Content("~/Scripts/uploader.js")" type="text/javascript"></script>*@
    <script type="text/javascript">
        //将form转为AJAX提交
        function ajaxSubmit(frm, fn) {
            var dataPara = getFormJson(frm);
            $.ajax({
                url: "/Admin/Loan/LoanApply",
                type: frm.method,
                data: dataPara,
                success: fn,
                error: function (data) { alert('错误'); }
            });
        }

        //将form中的值转换为键值对。
        function getFormJson(frm) {
            var o = {};
            var a = $(frm).serializeArray();
            $.each(a, function () {
                if (o[this.name] !== undefined) {
                    if (!o[this.name].push) {
                        o[this.name] = [o[this.name]];
                    }
                    o[this.name].push(this.value || '');
                } else {
                    o[this.name] = this.value || '';
                }
            });
            return o;
        }
    </script>
    <title>贷款申请</title>
</head>
<body class="gray-bg">
    <div class="wrapper wrapper-content animated fadeInRight">
        <div class="row">
            <div class="col-sm-12">
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <h5>
                            贷款申请 <small>填写完整的贷款申请信息</small></h5>
                        <div class="ibox-tools">
                            <a class="close-link"><i class="fa fa-times"></i></a>
                        </div>
                    </div>
                    <div class="ibox-content">
                        <form class="form-horizontal" role="form" id="customerForm" method="POST">
                        <div class="form-group">
                            <label class="col-sm-2 control-label">
                                贷款客户</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.Customer.customerName, new { @class = "form-control", name = "customerName", id = "customerName" })
                            </div>
                            <label class="col-sm-2 control-label">
                                客户经理</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.user.userName, new { @class = "form-control", name = "userName", id = "userName" })
                            </div>
                        </div>
                        <div class="hr-line-dashed">
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">
                                合同编号</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.contractNo, new { @class = "form-control", @required = "required", name = "contractNo", id = "contractNo" })
                            </div>
                            <label class="col-sm-2 control-label">
                                客户类型</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.customerType, new { @class = "form-control", @required = "required", name = "customerType", id = "customerType" })
                            </div>
                        </div>
                        <div class="hr-line-dashed">
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">
                                贷款金额(元)</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.loanValue, new { @class = "form-control", @required = "required", name = "loanValue", id = "loanValue" })
                            </div>
                            <label class="col-sm-2 control-label">
                                贷款用途</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.loanPurpose, new { @class = "form-control", @required = "required", name = "loanPurpose", id = "loanPurpose" })
                            </div>
                        </div>
                        <div class="hr-line-dashed">
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">
                                贷款类型</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.loanType, new { @class = "form-control", @required = "required", name = "loanType", id = "loanType" })
                            </div>
                            <label class="col-sm-2 control-label">
                                计算时间方式</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.calTimeType, new { @class = "form-control", @required = "required", name = "calTimeType", id = "calTimeType" })
                            </div>
                        </div>
                        <div class="hr-line-dashed">
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">
                                起止时间</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.startTime, new { @class = "form-control", @required = "required", name = "startTime", id = "startTime" })
                            </div>
                            <label class="col-sm-1 control-label">
                                期数</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.periodNum, new { @class = "form-control", @required = "required", name = "periodNum", id = "periodNum" })
                            </div>
                            <label class="col-sm-1 control-label">
                                间隔天数</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(model => model.intervalDays, new { @class = "form-control", @required = "required", name = "intervalDays", id = "intervalDays" })
                            </div>
                        </div>
                        <div class="hr-line-dashed">
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">
                                月利率(%)</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.monthRate, new { @class = "form-control", @required = "required", name = "monthRate", id = "monthRate" })
                            </div>
                            <label class="col-sm-2 control-label">
                                计息方法</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.calInterestWay, new { @class = "form-control", @required = "required", name = "calInterestWay", id = "calInterestWay" })
                            </div>
                        </div>
                        <div class="hr-line-dashed">
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">
                                逾期罚息</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.penaltyRate, new { @class = "form-control", @required = "required", name = "penaltyRate", id = "penaltyRate" })
                            </div>
                            <label class="col-sm-2 control-label">
                                支付方式</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.payWay, new { @class = "form-control", @required = "required", name = "payWay", id = "payWay" })
                            </div>
                        </div>
                        <div class="hr-line-dashed">
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">
                                提前还款</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.breachScale, new { @class = "form-control", @required = "required", name = "breachScale", id = "breachScale" })
                            </div>
                            <label class="col-sm-2 control-label">
                                协议利息</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.agreementInterest, new { @class = "form-control", @required = "required", name = "agreementInterest", id = "agreementInterest" })
                            </div>
                        </div>
                        <div class="hr-line-dashed">
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">
                                预收利息(元)</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.advanceInterest, new { @class = "form-control", @required = "required", name = "advanceInterest", id = "advanceInterest" })
                            </div>
                            <label class="col-sm-2 control-label">
                                手续费(元)</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.poundage, new { @class = "form-control", @required = "required", name = "poundage", id = "poundage" })
                            </div>
                        </div>
                        <div class="hr-line-dashed">
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">
                                担保人</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.guarantee, new { @class = "form-control", @required = "required", name = "guarantee", id = "guarantee" })
                            </div>
                            <label class="col-sm-2 control-label">
                                担保方式</label>
                            <div class="col-sm-4">
                                @Html.TextBoxFor(model => model.guaranteeWay, new { @class = "form-control", @required = "required", name = "guaranteeWay", id = "guaranteeWay" })
                            </div>
                        </div>
                        <div class="hr-line-dashed">
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">
                                备注</label>
                            <div class="col-sm-8">
                                @Html.TextAreaFor(model => model.remark, new { @class = "form-control", name = "remark", id = "remark" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div id="thelist" class="uploader-list">
                            </div>
                        </div>
                        <div class="hr-line-dashed">
                        </div>
                        <div class="form-group">
                            <div class="col-sm-4 col-sm-offset-2">
                                <button class="btn btn-primary" type="submit">
                                    保存内容</button>
                                <button class="btn btn-white" type="button">
                                    取消</button>
                            </div>
                        </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="@Url.Content("~/Scripts/bootstrap.min.js?v=3.3.5")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/content.min.js?v=1.0.0")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/plugins/validate/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/plugins/validate/messages_zh.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/plugins/datapicker/bootstrap-datepicker.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/plugins/layer/layer.js")" type="text/javascript"></script>
    <script type="text/javascript">
        var BASE_URL = 'Scripts/plugins/webuploader';
        // 图片上传demo
        jQuery(function () {
            var $ = jQuery,
        $list = $('#fileList'),
            // 优化retina, 在retina下这个值是2
        ratio = window.devicePixelRatio || 1,

            // 缩略图大小
        thumbnailWidth = 500 * ratio,
        thumbnailHeight = 300 * ratio,

            // Web Uploader实例
        uploader;

            // 初始化Web Uploader
            uploader = WebUploader.create({

                // 自动上传。
                auto: false,

                // swf文件路径
                //swf: BASE_URL + '/js/Uploader.swf',

                // 文件接收服务端。
                server: '/Admin/Customer/Upload',

                // 选择文件的按钮。可选。
                // 内部根据当前运行是创建，可能是input元素，也可能是flash.
                pick: '#filePicker',

                // 只允许选择文件，可选。
                accept: {
                    title: 'Images',
                    extensions: 'gif,jpg,jpeg,bmp,png',
                    mimeTypes: 'image/*'
                }
            });

            // 当有文件添加进来的时候
            var tempid;
            uploader.on('fileQueued', function (file) {
                var fileid = tempid;
                tempid = file.id;
                if (fileid) {
                    uploader.removeFile(uploader.getFile(fileid, true));
                }
                var $li = $(
                '<div id="' + file.id + '" class="file-item thumbnail">' +
                    '<img>' +
                '</div>'
                ),
            $img = $li.find('img');
                $("#recentPhoto").val(file.name);
                $list.empty();
                $list.append($li);

                // 创建缩略图
                uploader.makeThumb(file, function (error, src) {
                    if (error) {
                        $img.replaceWith('<span>不能预览</span>');
                        return;
                    }

                    $img.attr('src', src);
                }, thumbnailWidth, thumbnailHeight);
            });
            // 文件上传过程中创建进度条实时显示。
            uploader.on('uploadProgress', function (file, percentage) {
                var $li = $('#' + file.id),
                    $percent = $li.find('.progress span');

                // 避免重复创建
                if (!$percent.length) {
                    $percent = $('<p class="progress"><span></span></p>')
                .appendTo($li)
                .find('span');
                }

                $percent.css('width', percentage * 100 + '%');
            });

            // 文件上传成功，给item添加成功class, 用样式标记上传成功。
            uploader.on('uploadSuccess', function (file) {
                $('#' + file.id).addClass('upload-state-done');
                layer.alert("上传成功");
            });

            // 文件上传失败，显示上传出错。
            uploader.on('uploadError', function (file) {
                var $li = $('#' + file.id),
                    $error = $li.find('div.error');

                // 避免重复创建
                if (!$error.length) {
                    $error = $('<div class="error"></div>').appendTo($li);
                }
                $error.text('上传失败');
                layer.alert("上传失败");
            });

            // 完成上传完了，成功或者失败，先删除进度条。
            uploader.on('uploadComplete', function (file) {
                $('#' + file.id).find('.progress').remove();
            });
            //开始上传
            $("#ctlBtn").click(function () {
                uploader.upload();

            });
        });
    </script>
    <script src="@Url.Content("~/Scripts/plugins/webuploader/webuploader.min.js")" type="text/javascript"></script>
    <script type="text/javascript">
        //身份证号码的验证规则
        function isIdCardNo(num) {
            //if (isNaN(num)) {alert("输入的不是数字！"); return false;} 
            var len = num.length, re;
            if (len == 15)
                re = new RegExp(/^(\d{6})()?(\d{2})(\d{2})(\d{2})(\d{2})(\w)$/);
            else if (len == 18)
                re = new RegExp(/^(\d{6})()?(\d{4})(\d{2})(\d{2})(\d{3})(\w)$/);
            else {
                //alert("输入的数字位数不对。"); 
                return false;
            }
            var a = num.match(re);
            if (a != null) {
                if (len == 15) {
                    var D = new Date("19" + a[3] + "/" + a[4] + "/" + a[5]);
                    var B = D.getYear() == a[3] && (D.getMonth() + 1) == a[4] && D.getDate() == a[5];
                }
                else {
                    var D = new Date(a[3] + "/" + a[4] + "/" + a[5]);
                    var B = D.getFullYear() == a[3] && (D.getMonth() + 1) == a[4] && D.getDate() == a[5];
                }
                if (!B) {
                    //alert("输入的身份证号 "+ a[0] +" 里出生日期不对。"); 
                    return false;
                }
            }
            if (!re.test(num)) {
                //alert("身份证最后一位只能是数字和字母。");
                return false;
            }
            return true;
        }
        $().ready(function () {
            $("#birthday").datepicker({
                todayBtn: "linked"
            });
            $("#expireOfId").datepicker({
                todayBtn: "linked"
            });
            // 身份证号码验证 
            jQuery.validator.addMethod("isIdCardNo", function (value, element) {
                return this.optional(element) || isIdCardNo(value);
            }, "请正确输入您的身份证号码");
            // 手机号码验证    
            jQuery.validator.addMethod("isMobile", function (value, element) {
                var length = value.length;
                return this.optional(element) || (length == 11 && /^(((13[0-9]{1})|(15[0-9]{1})|(18[0-9]{1}))+\d{8})$/.test(value));
            }, "请正确填写您的手机号码。");
            // 电话号码验证    
            jQuery.validator.addMethod("isPhone", function (value, element) {
                var tel = /^(\d{3,4}-?)?\d{7,9}$/g;
                return this.optional(element) || (tel.test(value));
            }, "请正确填写您的电话号码。");
            var e = "<i class='fa fa-times-circle'></i> ";
            $("#customerForm").validate({
                rules: {
                    customerName: "required",
                    userName: {
                        required: true
                    },
                    contractNo: {
                        required: true
                    },
                    customerType: {
                        required: true
                    },
                    loanValue: {
                        required: true
                    },
                    loanPurpose: {
                        required: true
                    },
                    loanType: {
                        required: true
                    },
                    calTimeType: {
                        required: true
                    },
                    startTime: {
                        required: true
                    },
                    periodNum: {
                        required: true
                    },
                    intervalDays: {
                        required: true
                    },
                    monthRate: {
                        required: true
                    },
                    expireOfId: {
                        required: true
                    },
                    bankAccount: {
                        required: true,
                        minlength: 5
                    },
                    accountName: {
                        required: true
                    },
                    badRecord: {
                        required: true
                    },
                    debtValue: {
                        required: true
                    },
                    houseRight: {
                        required: true
                    },
                    houseEvaluation: {
                        required: true
                    },
                    spouseName: {
                        required: true
                    },
                    spouseIdCard: {
                        required: true
                    },
                    recentPhoto: {
                        required: true
                    }
                },
                messages: {
                    //错误消息
                    customerName: "请输入客户名",
                    userName: {
                        required: "请输入客户经理名"
                    },
                    contractNo: {
                        required: "请输入合同编号"
                    },
                    customerType: {
                        required: "请输入客户类型"
                    },
                    loanValue: {
                        required: "请输入贷款金额"
                    },
                    loanPurpose: {
                        required: "请输入贷款用途"
                    },
                    loanType: {
                        required: "请输入贷款类型"
                    },
                    calTimeType: {
                        required: "请输入计算时间方式"
                    },
                    startTime: {
                        required: "请输入起止时间"
                    },
                    periodNum: {
                        required: "请输入期数"
                    },
                    intervalDays: {
                        required: "请输入间隔天数"
                    },
                    monthRate: {
                        required: "请输入月利率"
                    },
                    healthStatus: {
                        required: "请输入计息方法"
                    },
                    bankAccount: {
                        required: "请输入开户银行"
                    },
                    accountName: {
                        required: "请输入开户名"
                    },
                    badRecord: {
                        required: "请输入不良贷款记录"
                    },
                    debtValue: {
                        required: "请输入负债余额"
                    },
                    houseRight: {
                        required: "请输入现住房产权"
                    },
                    houseEvaluation: {
                        required: "请输入自有房产估价"
                    },
                    spouseName: {
                        required: "请输入配偶姓名"
                    },
                    spouseIdCard: {
                        required: "请输入配偶身份证"
                    },
                    recentPhoto: {
                        required: "请输入客户近期照片"
                    }
                },
                submitHandler: function (form) {
                    ajaxSubmit(form, function (data) {
                        alert(data.msg);
                        if (data.success) {
                            window.location.href = "/Admin/Customer/AllCustomer";
                        }
                    });
                }
            });
        });
    </script>
</body>
</html>

